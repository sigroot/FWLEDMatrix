// Written by sigroot
use sig_rp2040_interface as matrix;
use std::thread;
use std::time::{SystemTime, UNIX_EPOCH, Duration};

const BAUDRATE: u32 = 1000000;
const TIMEOUT: u64 = 10000;

fn main() {
    let pattern = [
        [051,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,255,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,255,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,255,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,255,255,255,255,255,255,255,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000],
        [000,000,000,000,000,000,000,000,000]
    ];
    let mut board = matrix::LedMatrixInterface::new(BAUDRATE, TIMEOUT);
    board.set_pwm(&pattern);
    board.set_scale(&pattern);
    board.write();
    for i in 0..100 {
        let start = SystemTime::now();
        board.set_pwm(&pattern);
        board.write_pwm();
        println!("{}", SystemTime::now().duration_since(start).unwrap().as_micros());
    }
    println!("Hello, world!");
}
